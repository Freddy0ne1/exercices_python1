"""
Exercice : Gestion d'une biblioth√®que

Ce script permet de g√©rer une biblioth√®que avec des fonctionnalit√©s pour :
- Ajouter, supprimer, emprunter et rendre des livres
- Afficher les livres disponibles et emprunt√©s
"""


class Book:
    """
    Repr√©sente un livre avec un titre, un auteur et une ann√©e de publication.
    """

    def __init__(self, title, author, year):
        """
        Initialise un nouveau livre.

        Args:
            title (str): Titre du livre.
            author (str): Nom de l'auteur.
            year (int): Ann√©e de publication.
        """
        self.title = title
        self.author = author
        self.year = year

    def __str__(self):
        """
        Retourne une repr√©sentation lisible du livre.

        Returns:
            str: Format "Titre (Auteur, Ann√©e)"
        """
        return f"{self.title} ({self.author}, {self.year})"


class Library:
    """
    Classe repr√©sentant une biblioth√®que avec des livres disponibles et emprunt√©s.
    """

    def __init__(self):
        """
        Initialise une biblioth√®que vide.
        """
        self.books = []  # Liste des livres disponibles
        self.borrow_books = []  # Liste des livres emprunt√©s

    def add_book(self, book):
        """
        Ajoute un livre √† la biblioth√®que.

        Args:
            book (Book): Le livre √† ajouter.
        """
        self.books.append(book)
        print(f"üìó Livre ajout√© : {book.title}")

    def remove_book(self, book_title):
        """
        Supprime un livre de la biblioth√®que.

        Args:
            book_title (str): Le titre du livre √† supprimer.
        """
        for book in self.books:
            if book.title == book_title:
                self.books.remove(book)
                print(f"‚ùå Livre supprim√© : {book.title}")
                return
        print("Livre non trouv√© dans les livres disponibles.")

    def borrow_book(self, book_title):
        """
        Permet d'emprunter un livre par son titre.

        Args:
            book_title (str): Le titre du livre √† emprunter.
        """
        for book in self.books:
            if book.title == book_title:
                self.books.remove(book)
                self.borrow_books.append(book)
                print(f"üìï Livre emprunt√© : {book.title}")
                return
        print("Livre non disponible ou d√©j√† emprunt√©.")

    def return_book(self, book_title):
        """
        Permet de rendre un livre par son titre.

        Args:
            book_title (str): Le titre du livre √† rendre.
        """
        for book in self.borrow_books:
            if book.title == book_title:
                self.borrow_books.remove(book)
                self.books.append(book)
                print(f"üìò Livre rendu : {book.title}")
                return
        print("Ce livre n'a pas √©t√© emprunt√©.")

    def available_books(self):
        """
        Retourne la liste des titres disponibles.

        Returns:
            list of str: Titres des livres disponibles.
        """
        return [book.title for book in self.books]

    def borrowed_books(self):
        """
        Retourne la liste des titres emprunt√©s.

        Returns:
            list of str: Titres des livres emprunt√©s.
        """
        return [book.title for book in self.borrow_books]


# üß™ --- Partie test ---

# Cr√©ation de livres
book1 = Book("L'√âtranger", "Albert Camus", 1942)
book2 = Book("Harry Potter √† l'√©cole des sorciers", "J.K. Rowling", 1997)
book3 = Book("Madame Bovary", "Gustave Flaubert", 1857)

# Cr√©ation de la biblioth√®que
library = Library()

# Ajout des livres √† la biblioth√®que
library.add_book(book1)
library.add_book(book2)
library.add_book(book3)

# Emprunter un livre existant
library.borrow_book("L'√âtranger")

# Affichage des livres disponibles
print("üìö Livres disponibles :", library.available_books())

# Affichage des livres emprunt√©s
print("üìï Livres emprunt√©s :", library.borrowed_books())

# Rendre un livre emprunt√©
library.return_book("L'√âtranger")

# Affichage mis √† jour
print("üìö Livres disponibles apr√®s retour :", library.available_books())
print("üìï Livres emprunt√©s apr√®s retour :", library.borrowed_books())
